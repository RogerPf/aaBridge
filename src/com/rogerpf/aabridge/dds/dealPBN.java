package com.rogerpf.aabridge.dds;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : line 179</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class dealPBN extends Structure {
	public int trump;
	public int first;
	/** C type : int[3] */
	public int[] currentTrickSuit = new int[3];
	/** C type : int[3] */
	public int[] currentTrickRank = new int[3];
	/** C type : char[80] */
	public byte[] remainCards = new byte[80];

	public dealPBN() {
		super();
	}

	protected List<?> getFieldOrder() {
		return Arrays.asList("trump", "first", "currentTrickSuit", "currentTrickRank", "remainCards");
	}

	/**
	 * @param currentTrickSuit C type : int[3]<br>
	 * @param currentTrickRank C type : int[3]<br>
	 * @param remainCards C type : char[80]
	 */
	public dealPBN(int trump, int first, int currentTrickSuit[], int currentTrickRank[], byte remainCards[]) {
		super();
		this.trump = trump;
		this.first = first;
		if ((currentTrickSuit.length != this.currentTrickSuit.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.currentTrickSuit = currentTrickSuit;
		if ((currentTrickRank.length != this.currentTrickRank.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.currentTrickRank = currentTrickRank;
		if ((remainCards.length != this.remainCards.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.remainCards = remainCards;
	}

	public dealPBN(Pointer peer) {
		super(peer);
	}

	public static class ByReference extends dealPBN implements Structure.ByReference {

	};

	public static class ByValue extends dealPBN implements Structure.ByValue {

	};
}
