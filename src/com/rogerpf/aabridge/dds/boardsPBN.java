package com.rogerpf.aabridge.dds;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : line 198</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class boardsPBN extends Structure {
	public int noOfBoards;
	/** C type : dealPBN[200] */
	public dealPBN[] deals = new dealPBN[200];
	/** C type : int[200] */
	public int[] target = new int[200];
	/** C type : int[200] */
	public int[] solutions = new int[200];
	/** C type : int[200] */
	public int[] mode = new int[200];

	public boardsPBN() {
		super();
	}

	protected List<?> getFieldOrder() {
		return Arrays.asList("noOfBoards", "deals", "target", "solutions", "mode");
	}

	/**
	 * @param deals C type : dealPBN[200]<br>
	 * @param target C type : int[200]<br>
	 * @param solutions C type : int[200]<br>
	 * @param mode C type : int[200]
	 */
	public boardsPBN(int noOfBoards, dealPBN deals[], int target[], int solutions[], int mode[]) {
		super();
		this.noOfBoards = noOfBoards;
		if ((deals.length != this.deals.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.deals = deals;
		if ((target.length != this.target.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.target = target;
		if ((solutions.length != this.solutions.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.solutions = solutions;
		if ((mode.length != this.mode.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.mode = mode;
	}

	public boardsPBN(Pointer peer) {
		super(peer);
	}

	public static class ByReference extends boardsPBN implements Structure.ByReference {

	};

	public static class ByValue extends boardsPBN implements Structure.ByValue {

	};
}
