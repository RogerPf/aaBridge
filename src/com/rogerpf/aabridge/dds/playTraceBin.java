package com.rogerpf.aabridge.dds;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : line 295</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class playTraceBin extends Structure {
	public int number;
	/** C type : int[52] */
	public int[] suit = new int[52];
	/** C type : int[52] */
	public int[] rank = new int[52];

	public playTraceBin() {
		super();
	}

	protected List<?> getFieldOrder() {
		return Arrays.asList("number", "suit", "rank");
	}

	/**
	 * @param suit C type : int[52]<br>
	 * @param rank C type : int[52]
	 */
	public playTraceBin(int number, int suit[], int rank[]) {
		super();
		this.number = number;
		if ((suit.length != this.suit.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.suit = suit;
		if ((rank.length != this.rank.length))
			throw new IllegalArgumentException("Wrong array size !");
		this.rank = rank;
	}

	public playTraceBin(Pointer peer) {
		super(peer);
	}

	public static class ByReference extends playTraceBin implements Structure.ByReference {

	};

	public static class ByValue extends playTraceBin implements Structure.ByValue {

	};
}
